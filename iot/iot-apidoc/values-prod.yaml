##########################################################################################################
#                   作者：何梦飞
#                   编撰日期：2022年5月24日21点17分
#                   服务：ubmp-auth
#                   环境：prod
#                   端口说明：
#                       1. 注册端口：8071
#                       2. 调度端口：20884
#                   代码仓库地址：  http://gitlab.space.com/upms/ubmp/service/space-ubmp-auth.git                                                               #
#                   nacos地址：
#                       1. redis.yml,db-space.yml,nacos.yml,space.yml,common.yml,portal-env.yml
#                   域名地址： null
#xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# 修改模块选择：
#       1.deployment.yaml
#       2.ingress.yaml
#       3.service.yaml
#
############################################################ deployment.yaml ##########################################
replicaCount: 1
#》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》  镜像定义
image:
  repository: space.tencentcloudcr.com/iot/iot-apidoc
  pullPolicy: IfNotPresent
  tag: "latest"
#》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》 是否开启边车模式 skywalking?
InitContainers:
  Enabled: false
  InitContainersMountsAttributes:
    - name: sw-agent-sidecar
      image: harbor.space.com/middleware/skywalking-agent:8.1.0
      imagePullPolicy: IfNotPresent
      command: ['sh']
      args: ['-c','mkdir -p /skywalking/agent && cp -r /usr/skywalking/agent/* /skywalking/agent']
      volumeMounts:
        - mountPath: /skywalking/agent
          name: sw-agent
  ContainersMountsAttributes:
    - mountPath: /usr/skywalking/agent
      name: sw-agent
  VolumesAttributes:
    - name: sw-agent
      emptyDir: {}
# 》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》 - 是否开启镜像认证
ImagePullSecrets:
  Enabled: false
  Attributes:
    - name: dasdad
#》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》---  是否开启资源限制
resources:
  Enabled: false
  ResourcesAttributes:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
#》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》--- 是否开启健康检查
HealthCheck:
  Enabled: true
  EetectAttributes:
    startupProbe:
      failureThreshold: 50
      httpGet:
        path: /actuator/health
        port: registry
        scheme: HTTP
      initialDelaySeconds: 20
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 10
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /actuator/health
        port: registry
        scheme: HTTP
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /actuator/health
        port: registry
        scheme: HTTP
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
#》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》--- 是否开启污点
Tolerations:
  Enabled: false
  TolerationsAttributes:
    - key: "middleware"
      operator: "Equal"
      value: "true"
      effect: "NoSchedule"
#》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》---  定义pord的端口
Deployment:
  Enabled: true
  Ports:
    - name: schedule
      containerPort: 18610
      protocol: TCP
    - name: registry
      containerPort: 8610
      protocol: TCP
#》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》-- 是否开启 链路兼容
Servicecompatible:
  Enabled: false
#》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》-- 是否开启 ClusterIP 网络IP
ClusterIPService:
  Enable: true
  type: ClusterIP
  ApplicationPort: 8610
  ClusterExternalPorts:
    - portName: schedule
      port: 18610
      targetPort: schedule
      protocol: TCP
    - portName: registry
      protocol: TCP
      port: 8610
      targetPort: registry
#》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》-- 是否开 NodePort 网络类型
NodePortService:
  Enable: false
  type: NodePort
  ClusterExternalPorts:
    - portName: Security
      protocol: TCP
      port: 443
      targetPort: Security
    - portName: schedule
      protocol: TCP
      port: 23398
      targetPort: schedule
    - portName: registry
      protocol: TCP
      port: 3398
      targetPort: registry
      nodePort: 30001
#》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》- LoadBalancer 网络类型
LoadBalancerPortService:
  Enable: false
  type: LoadBalancer
  ClusterExternalPorts:
    - portName: encryption
      port: 443  # 开启pod端口
      protocol: TCP
      targetPort: encryption # 开启pod映射到容器内部的端口
    - portName: schedule
      port: 23398  # 开启pod端口
      targetPort: schedule # 开启pod映射到容器内部的端口
      protocol: TCP
    - portName: registry
      port: 3398  # 开启pod端口
      targetPort: registry # 开启pod映射到容器内部的端口
      protocol: TCP
      nodePort: 30001


ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local




EnvironmentAnnotations:
  ServiceBusinessLine: iot
  ServiceEnvironment: prod
  ServiceName: iot-apidoc
EnvironmentGlobal:
  - name: nacos-server-addr
    value: nacos-hs.middleware.svc.cluster.local:8848
  - name: nacos-namespace
    value:  iot-prod
EnvironmentSidecar: []
EnvironmentCharacteristic: []
EnvironmentPublic:
  - name: RedisUrl
    value: redis-haproxy.middleware.svc.cluster.local
  - name: RedisPort
    value: "6379"
  - name: RedisPassword
    value: none
  - name: CloudEdgeMqNameServer
    value: 106.52.161.104:9876
  - name: CloudEdgeMqGroup
    value: cloud-edge-proxy-prodcuer-group
  - name: CloudEdgeMqTopic
    value: edge_belong_system_door_control
  - name: CloudEdgeSpaceUrl
    value: http://gateway-web.uat.svc.spaceiot.local:8000
  - name: CloudEdgePropertyUrl
    value: https://osms-gateway-uat.spaceplat.com
  - name: CloudEdgeIotUrl
    value: https://iot-gateway-web.spaceplat.com
  - name: CloudEdgeTenementCode
    value: ZH_00004
  - name: CloudEdgeProjectCode
    value: ZH_00004_XM_00000001
EnvironmentInterface: []


autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
nodeSelector: {}
affinity: {}
nameOverride: ""
fullnameOverride: ""
serviceAccount:
  create: false
  annotations: {}
  name: ""
podAnnotations: {}
podSecurityContext: {}
securityContext: {}